Questnum,Answers,Explains
1,60,"== Physical Plan ==AdaptiveSparkPlan isFinalPlan=false+- HashAggregate(keys=[_c11#28], functions=[])   +- Exchange hashpartitioning(_c11#28, 200), ENSURE_REQUIREMENTS, [id=#36]      +- HashAggregate(keys=[_c11#28], functions=[])         +- Filter (isnotnull(_c11#28) AND NOT (_c11#28 = -))            +- FileScan csv [_c11#28] Batched: false, DataFilters: [isnotnull(_c11#28), NOT (_c11#28 = -)], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/C:/Users/Martin Schepers/Documents/GitHub/programming3/Assignmen..., PartitionFilters: [], PushedFilters: [IsNotNull(_c11), Not(EqualTo(_c11,-))], ReadSchema: struct<_c11:string>"
2,1.8,"== Physical Plan ==AdaptiveSparkPlan isFinalPlan=false+- HashAggregate(keys=[_c11#28], functions=[])   +- Exchange hashpartitioning(_c11#28, 200), ENSURE_REQUIREMENTS, [id=#153]      +- HashAggregate(keys=[_c11#28], functions=[])         +- Filter (isnotnull(_c11#28) AND NOT (_c11#28 = -))            +- FileScan csv [_c11#28] Batched: false, DataFilters: [isnotnull(_c11#28), NOT (_c11#28 = -)], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/C:/Users/Martin Schepers/Documents/GitHub/programming3/Assignmen..., PartitionFilters: [], PushedFilters: [IsNotNull(_c11), Not(EqualTo(_c11,-))], ReadSchema: struct<_c11:string>"
3,GO:0071973,"== Physical Plan ==AdaptiveSparkPlan isFinalPlan=false+- SortAggregate(key=[], functions=[max(_c13#75)])   +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#319]      +- SortAggregate(key=[], functions=[partial_max(_c13#75)])         +- Generate explode(split(_c13#30, \|, -1)), false, [_c13#75]            +- Filter (isnotnull(_c13#30) AND NOT (_c13#30 = -))               +- FileScan csv [_c13#30] Batched: false, DataFilters: [isnotnull(_c13#30), NOT (_c13#30 = -)], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/C:/Users/Martin Schepers/Documents/GitHub/programming3/Assignmen..., PartitionFilters: [], PushedFilters: [IsNotNull(_c13), Not(EqualTo(_c13,-))], ReadSchema: struct<_c13:string>"
4,275.50452025394884,"== Physical Plan ==AdaptiveSparkPlan isFinalPlan=false+- HashAggregate(keys=[], functions=[avg(abs((_c7 - _c8))#125)])   +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#384]      +- HashAggregate(keys=[], functions=[partial_avg(abs((_c7 - _c8))#125)])         +- Project [abs((cast(_c7#24 as double) - cast(_c8#25 as double))) AS abs((_c7 - _c8))#125]            +- FileScan csv [_c7#24,_c8#25] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/C:/Users/Martin Schepers/Documents/GitHub/programming3/Assignmen..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<_c7:string,_c8:string>"
5,"['IPR001697', 'IPR005814', 'IPR000456', 'IPR001867', 'IPR004358', 'IPR000515', 'IPR001789', 'IPR036890', 'IPR003594', 'IPR015963']","== Physical Plan ==AdaptiveSparkPlan isFinalPlan=false+- HashAggregate(keys=[_c11#28], functions=[count(1)])   +- Exchange hashpartitioning(_c11#28, 200), ENSURE_REQUIREMENTS, [id=#442]      +- HashAggregate(keys=[_c11#28], functions=[partial_count(1)])         +- Filter (isnotnull(_c11#28) AND NOT (_c11#28 = -))            +- FileScan csv [_c11#28] Batched: false, DataFilters: [isnotnull(_c11#28), NOT (_c11#28 = -)], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/C:/Users/Martin Schepers/Documents/GitHub/programming3/Assignmen..., PartitionFilters: [], PushedFilters: [IsNotNull(_c11), Not(EqualTo(_c11,-))], ReadSchema: struct<_c11:string>"
6,"['IPR036890', 'IPR005814', 'IPR003594', 'IPR004358', 'IPR001867', 'IPR000456', 'IPR035906', 'IPR007466', 'IPR015963', 'IPR036393']","== Physical Plan ==AdaptiveSparkPlan isFinalPlan=false+- Sort [perc#194 ASC NULLS FIRST], true, 0   +- Exchange rangepartitioning(perc#194 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [id=#511]      +- Project [_c0#17, _c1#18, _c2#19, _c3#20, _c4#21, _c5#22, _c6#23, _c7#24, _c8#25, _c9#26, _c10#27, _c11#28, _c12#29, _c13#30, _c14#31, ((cast(_c7#24 as double) - cast(_c8#25 as double)) / cast(_c2#19 as double)) AS perc#194]         +- FileScan csv [_c0#17,_c1#18,_c2#19,_c3#20,_c4#21,_c5#22,_c6#23,_c7#24,_c8#25,_c9#26,_c10#27,_c11#28,_c12#29,_c13#30,_c14#31] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/C:/Users/Martin Schepers/Documents/GitHub/programming3/Assignmen..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<_c0:string,_c1:string,_c2:string,_c3:string,_c4:string,_c5:string,_c6:string,_c7:string,_c..."
7,"['domain', 'superfamily', 'Pyruvate', 'protein', 'kinase', 'kinase,', 'C-terminal', 'L17', 'Histidine', 'transduction']","== Physical Plan ==AdaptiveSparkPlan isFinalPlan=false+- Sort [count#260L DESC NULLS LAST], true, 0   +- Exchange rangepartitioning(count#260L DESC NULLS LAST, 200), ENSURE_REQUIREMENTS, [id=#602]      +- HashAggregate(keys=[_c12#256], functions=[count(1)])         +- Exchange hashpartitioning(_c12#256, 200), ENSURE_REQUIREMENTS, [id=#599]            +- HashAggregate(keys=[_c12#256], functions=[partial_count(1)])               +- Generate explode(split(_c12#29,  , -1)), false, [_c12#256]                  +- Filter (isnotnull(_c12#29) AND NOT (_c12#29 = -))                     +- FileScan csv [_c12#29] Batched: false, DataFilters: [isnotnull(_c12#29), NOT (_c12#29 = -)], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/C:/Users/Martin Schepers/Documents/GitHub/programming3/Assignmen..., PartitionFilters: [], PushedFilters: [IsNotNull(_c12), Not(EqualTo(_c12,-))], ReadSchema: struct<_c12:string>"
8,"['GAF', 'TipAS', 'biosynthesis,', 'isomerase', 'mobile', 'DUF1657', 'major', 'component', 'Bacteriocin', 'ArtM/GltK/GlnP/TcyL/YhdX-like']","== Physical Plan ==AdaptiveSparkPlan isFinalPlan=false+- Sort [count#283L ASC NULLS FIRST], true, 0   +- Exchange rangepartitioning(count#283L ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [id=#701]      +- HashAggregate(keys=[_c12#279], functions=[count(1)])         +- Exchange hashpartitioning(_c12#279, 200), ENSURE_REQUIREMENTS, [id=#698]            +- HashAggregate(keys=[_c12#279], functions=[partial_count(1)])               +- Generate explode(split(_c12#29,  , -1)), false, [_c12#279]                  +- Filter (isnotnull(_c12#29) AND NOT (_c12#29 = -))                     +- FileScan csv [_c12#29] Batched: false, DataFilters: [isnotnull(_c12#29), NOT (_c12#29 = -)], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/C:/Users/Martin Schepers/Documents/GitHub/programming3/Assignmen..., PartitionFilters: [], PushedFilters: [IsNotNull(_c12), Not(EqualTo(_c12,-))], ReadSchema: struct<_c12:string>"
9,"['superfamily', 'kinase/HSP90-like', 'ATPase', 'Histidine', 'Aminotransferase', 'class-III', 'L17', 'protein', 'Ribosomal', 'kinase-related']","== Physical Plan ==AdaptiveSparkPlan isFinalPlan=false+- Sort [count#306L DESC NULLS LAST], true, 0   +- Exchange rangepartitioning(count#306L DESC NULLS LAST, 200), ENSURE_REQUIREMENTS, [id=#796]      +- HashAggregate(keys=[_c12#302], functions=[count(1)])         +- Exchange hashpartitioning(_c12#302, 200), ENSURE_REQUIREMENTS, [id=#793]            +- HashAggregate(keys=[_c12#302], functions=[partial_count(1)])               +- Generate explode(split(_c12#29,  , -1)), false, [_c12#302]                  +- Project [_c12#29]                     +- Filter ((isnotnull(_c12#29) AND _c11#28 IN (IPR036890,IPR005814,IPR003594,IPR004358,IPR001867,IPR000456,IPR035906,IPR007466,IPR015963,IPR036393)) AND NOT (_c12#29 = -))                        +- FileScan csv [_c11#28,_c12#29] Batched: false, DataFilters: [isnotnull(_c12#29), _c11#28 IN (IPR036890,IPR005814,IPR003594,IPR004358,IPR001867,IPR000456,IPR0..., Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/C:/Users/Martin Schepers/Documents/GitHub/programming3/Assignmen..., PartitionFilters: [], PushedFilters: [IsNotNull(_c12), In(_c11, [IPR000456,IPR001867,IPR003594,IPR004358,IPR005814,IPR007466,IPR015963..., ReadSchema: struct<_c11:string,_c12:string>"
10,0.14455840022857916,"== Physical Plan ==AdaptiveSparkPlan isFinalPlan=false+- HashAggregate(keys=[_c0#17, _c2#19], functions=[count(1)])   +- Exchange hashpartitioning(_c0#17, _c2#19, 200), ENSURE_REQUIREMENTS, [id=#881]      +- HashAggregate(keys=[_c0#17, _c2#19], functions=[partial_count(1)])         +- Project [_c0#17, _c2#19]            +- Filter (isnotnull(_c11#28) AND NOT (_c11#28 = -))               +- FileScan csv [_c0#17,_c2#19,_c11#28] Batched: false, DataFilters: [isnotnull(_c11#28), NOT (_c11#28 = -)], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/C:/Users/Martin Schepers/Documents/GitHub/programming3/Assignmen..., PartitionFilters: [], PushedFilters: [IsNotNull(_c11), Not(EqualTo(_c11,-))], ReadSchema: struct<_c0:string,_c2:string,_c11:string>"
